stages:
  - setup
  - build

variables:
  NODE_VERSION: "22"
  NPM_VERSION: "latest"
  DOCKER_IMAGE: "pplale-web"
  DOCKER_TAG: "latest"
  # GitHub Pages用の環境変数
  GITHUB_PAGES: "false"

setup:
  stage: setup
  tags:
    - web
  before_script:
    - sleep 5
  script:
    - |
      echo "Node.js version: "
      node -v
      echo "NPM version: "
      npm -v
      echo "Docker version: "
      docker --version
  allow_failure: false

build:
  stage: build
  tags:
    - web
  before_script:
    - sleep 2
  script:
    - |
      echo "Building Docker image..."
      docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
      echo "Saving Docker image..."
      docker save $DOCKER_IMAGE:$DOCKER_TAG | gzip > $DOCKER_IMAGE.tar.gz
      echo "Copying Docker image to server..."
      scp -o StrictHostKeyChecking=no $DOCKER_IMAGE.tar.gz ubuntu@192.168.0.5:/tmp/
      echo "Deploying to server..."
      ssh -o StrictHostKeyChecking=no ubuntu@192.168.0.5 "docker load < /tmp/$DOCKER_IMAGE.tar.gz && \
                                                         docker stop pplale-web || true && \
                                                         docker rm pplale-web || true && \
                                                         docker run -d \
                                                           --name pplale-web \
                                                           --restart always \
                                                           -p 3000:3000 \
                                                           -v /var/www/pplale.pgw.jp/static:/app/static \
                                                           -v /var/www/pplale.pgw.jp/public:/app/public \
                                                           $DOCKER_IMAGE:$DOCKER_TAG && \
                                                         rm /tmp/$DOCKER_IMAGE.tar.gz"
      echo "Restarting Nginx..."
      ssh -o StrictHostKeyChecking=no ubuntu@192.168.0.5 "sudo systemctl restart nginx"
      echo "Verifying deployment..."
      ssh -o StrictHostKeyChecking=no ubuntu@192.168.0.5 "docker ps | grep pplale-web"
  environment:
    name: production
    url: https://pplale.pgw.jp
  only:
    - main
  allow_failure: false 