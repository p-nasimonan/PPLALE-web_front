stages:
  - setup
  - build

variables:
  DOCKER_IMAGE: "pplale-web"
  DOCKER_TAG: "latest"
  # GitHub Pages用の環境変数
  GITHUB_PAGES: "false"
  # Firebase環境変数
  FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
  FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
  FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
  # アプリケーション環境変数
  NEXT_PUBLIC_BASE_URL: "https://pplale.pgw.jp"

setup:
  stage: setup
  tags:
    - web
  before_script:
    - sleep 3
  script:
    - |
      echo "Docker version: "
      docker --version
  allow_failure: false

build:
  stage: build
  tags:
    - web
  before_script:
    - sleep 2
  script:
    - |
      # 環境変数の存在確認
      if [ -z "$NEXT_PUBLIC_BASE_URL" ]; then
        echo "Error: NEXT_PUBLIC_BASE_URL is not set"
        exit 1
      fi
      
      # 環境変数ファイルの作成
      echo "NEXT_PUBLIC_BASE_URL=$NEXT_PUBLIC_BASE_URL" > .env.production
      echo "FIREBASE_PROJECT_ID=$FIREBASE_PROJECT_ID" >> .env.production
      echo "FIREBASE_CLIENT_EMAIL=$FIREBASE_CLIENT_EMAIL" >> .env.production
      echo "FIREBASE_PRIVATE_KEY=$FIREBASE_PRIVATE_KEY" >> .env.production
      
      # ビルドとデプロイ
      docker build --no-cache -t $DOCKER_IMAGE:$DOCKER_TAG .
      
      # 既存のコンテナを確実に停止して削除
      docker stop pplale-web || true
      docker rm -f pplale-web || true
      
      # 新しいコンテナを起動
      docker run -d \
        --name pplale-web \
        --restart always \
        -p 3000:3000 \
        -v /var/log/pplale-web:/app/logs \
        $DOCKER_IMAGE:$DOCKER_TAG
      
      echo "Restarting Nginx..."
      sudo systemctl restart nginx
      echo "Verifying deployment..."
      docker ps | grep pplale-web
  environment:
    name: production
    url: https://pplale.pgw.jp
  only:
    - main
  allow_failure: false 